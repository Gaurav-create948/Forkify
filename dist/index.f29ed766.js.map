{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-d3c6714a85c3593f.js","src/js/config.js","src/js/helper.js","src/js/model.js","node_modules/fractional/index.js","node_modules/@parcel/runtime-js/lib/runtime-786e1fe4b788c342.js","src/js/Views/view.js","src/js/Views/recipeView.js","src/js/Views/searchView.js","src/js/Views/resultsView.js","src/js/Views/paginationView.js","src/js/controller.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"f9fpV\\\":\\\"index.f29ed766.js\\\",\\\"eyyUD\\\":\\\"icons.c14567a0.svg\\\"}\"));","export const API_URL = 'https://forkify-api.herokuapp.com/api/v2/recipes';\r\nexport const Time_Out = 10;\r\nexport const RESULT_PER_PAGE = 10;","export const getJSON = async function(url) {\r\n    try {\r\n        const res = await fetch(url);\r\n        const data = await res.json();\r\n        if (!res.ok) throw new Error(`${data.message} (${res.status})`);\r\n        return data;\r\n    } catch (error) {\r\n        console.log(error);\r\n        throw error;\r\n    }\r\n}\r\n","import {API_URL, RESULT_PER_PAGE} from \"./config.js\";\r\nimport {getJSON}  from \"./helper.js\";\r\n\r\nexport let state = {\r\n    recipe : {},\r\n    search : {\r\n        query : '',\r\n        results : [],\r\n        page : 1,\r\n        resultsPerPage: RESULT_PER_PAGE\r\n    }\r\n};\r\n\r\nexport const loadRecipe = async function(id){\r\n    try {\r\n        const data = await getJSON(`${API_URL}/${id}`); // getting data from helper.\r\n        let { recipe } = data.data;\r\n        state.recipe = {\r\n          id: recipe.recipe_id,\r\n          image: recipe.image_url,\r\n          title: recipe.title,\r\n          time : recipe.cooking_time,\r\n          publisher: recipe.publisher,\r\n          sourceUrl: recipe.source_url,\r\n          servings: recipe.servings,\r\n          ingredients: recipe.ingredients\r\n        }\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n};\r\n\r\n\r\nexport const searchRecipe = async function(query) {\r\n    try {\r\n        const findRecipe = await getJSON(`${API_URL}?search=${query}`);\r\n        state.search.results = findRecipe.data.recipes.map(rec => {\r\n            return{\r\n                id: rec.id,\r\n                title: rec.title,\r\n                publisher: rec.publisher,\r\n                image: rec.image_url,\r\n            }\r\n        })\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\n\r\nexport const getSearchResultsPage = function(page = state.search.page) {\r\n    state.search.page = page;\r\n    const start = (page - 1) * 10, end = page*10;\r\n    /*\r\n        calculation -> \r\n            For page 1) 1-1*10=0, 1*10=10\r\n            For page 2) 2-1*10=10, 2*10=20\r\n    */\r\n   return state.search.results.slice(start, end);\r\n}\r\n\r\n\r\nexport const updateServings = function (newServings) {\r\n    state.recipe.ingredients.forEach(ing => {\r\n        ing.quantity = (ing.quantity * newServings) / state.recipe.servings;\r\n        // newQt = oldQt * newServings / oldServings // 2 * 8 / 4 = 4\r\n    }); \r\n\r\n    state.recipe.servings = newServings;\r\n}","/*\nfraction.js\nA Javascript fraction library.\n\nCopyright (c) 2009  Erik Garrison <erik@hypervolu.me>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n*/\n\n\n/* Fractions */\n/* \n *\n * Fraction objects are comprised of a numerator and a denomenator.  These\n * values can be accessed at fraction.numerator and fraction.denomenator.\n *\n * Fractions are always returned and stored in lowest-form normalized format.\n * This is accomplished via Fraction.normalize.\n *\n * The following mathematical operations on fractions are supported:\n *\n * Fraction.equals\n * Fraction.add\n * Fraction.subtract\n * Fraction.multiply\n * Fraction.divide\n *\n * These operations accept both numbers and fraction objects.  (Best results\n * are guaranteed when the input is a fraction object.)  They all return a new\n * Fraction object.\n *\n * Usage:\n *\n * TODO\n *\n */\n\n/*\n * The Fraction constructor takes one of:\n *   an explicit numerator (integer) and denominator (integer),\n *   a string representation of the fraction (string),\n *   or a floating-point number (float)\n *\n * These initialization methods are provided for convenience.  Because of\n * rounding issues the best results will be given when the fraction is\n * constructed from an explicit integer numerator and denomenator, and not a\n * decimal number.\n *\n *\n * e.g. new Fraction(1, 2) --> 1/2\n *      new Fraction('1/2') --> 1/2\n *      new Fraction('2 3/4') --> 11/4  (prints as 2 3/4)\n *\n */\nFraction = function(numerator, denominator)\n{\n    /* double argument invocation */\n    if (typeof numerator !== 'undefined' && denominator) {\n        if (typeof(numerator) === 'number' && typeof(denominator) === 'number') {\n            this.numerator = numerator;\n            this.denominator = denominator;\n        } else if (typeof(numerator) === 'string' && typeof(denominator) === 'string') {\n            // what are they?\n            // hmm....\n            // assume they are ints?\n            this.numerator = parseInt(numerator);\n            this.denominator = parseInt(denominator);\n        }\n    /* single-argument invocation */\n    } else if (typeof denominator === 'undefined') {\n        num = numerator; // swap variable names for legibility\n        if (typeof(num) === 'number') {  // just a straight number init\n            this.numerator = num;\n            this.denominator = 1;\n        } else if (typeof(num) === 'string') {\n            var a, b;  // hold the first and second part of the fraction, e.g. a = '1' and b = '2/3' in 1 2/3\n                       // or a = '2/3' and b = undefined if we are just passed a single-part number\n            var arr = num.split(' ')\n            if (arr[0]) a = arr[0]\n            if (arr[1]) b = arr[1]\n            /* compound fraction e.g. 'A B/C' */\n            //  if a is an integer ...\n            if (a % 1 === 0 && b && b.match('/')) {\n                return (new Fraction(a)).add(new Fraction(b));\n            } else if (a && !b) {\n                /* simple fraction e.g. 'A/B' */\n                if (typeof(a) === 'string' && a.match('/')) {\n                    // it's not a whole number... it's actually a fraction without a whole part written\n                    var f = a.split('/');\n                    this.numerator = f[0]; this.denominator = f[1];\n                /* string floating point */\n                } else if (typeof(a) === 'string' && a.match('\\.')) {\n                    return new Fraction(parseFloat(a));\n                /* whole number e.g. 'A' */\n                } else { // just passed a whole number as a string\n                    this.numerator = parseInt(a);\n                    this.denominator = 1;\n                }\n            } else {\n                return undefined; // could not parse\n            }\n        }\n    }\n    this.normalize();\n}\n\n\nFraction.prototype.clone = function()\n{\n    return new Fraction(this.numerator, this.denominator);\n}\n\n\n/* pretty-printer, converts fractions into whole numbers and fractions */\nFraction.prototype.toString = function()\n{\n    if (this.denominator==='NaN') return 'NaN'\n    var wholepart = (this.numerator/this.denominator>0) ?\n      Math.floor(this.numerator / this.denominator) :\n      Math.ceil(this.numerator / this.denominator)\n    var numerator = this.numerator % this.denominator \n    var denominator = this.denominator;\n    var result = []; \n    if (wholepart != 0)  \n        result.push(wholepart);\n    if (numerator != 0)  \n        result.push(((wholepart===0) ? numerator : Math.abs(numerator)) + '/' + denominator);\n    return result.length > 0 ? result.join(' ') : 0;\n}\n\n\n/* destructively rescale the fraction by some integral factor */\nFraction.prototype.rescale = function(factor)\n{\n    this.numerator *= factor;\n    this.denominator *= factor;\n    return this;\n}\n\n\nFraction.prototype.add = function(b)\n{\n    var a = this.clone();\n    if (b instanceof Fraction) {\n        b = b.clone();\n    } else {\n        b = new Fraction(b);\n    }\n    td = a.denominator;\n    a.rescale(b.denominator);\n    b.rescale(td);\n\n    a.numerator += b.numerator;\n\n    return a.normalize();\n}\n\n\nFraction.prototype.subtract = function(b)\n{\n    var a = this.clone();\n    if (b instanceof Fraction) {\n        b = b.clone();  // we scale our argument destructively, so clone\n    } else {\n        b = new Fraction(b);\n    }\n    td = a.denominator;\n    a.rescale(b.denominator);\n    b.rescale(td);\n\n    a.numerator -= b.numerator;\n\n    return a.normalize();\n}\n\n\nFraction.prototype.multiply = function(b)\n{\n    var a = this.clone();\n    if (b instanceof Fraction)\n    {\n        a.numerator *= b.numerator;\n        a.denominator *= b.denominator;\n    } else if (typeof b === 'number') {\n        a.numerator *= b;\n    } else {\n        return a.multiply(new Fraction(b));\n    }\n    return a.normalize();\n}\n\nFraction.prototype.divide = function(b)\n{\n    var a = this.clone();\n    if (b instanceof Fraction)\n    {\n        a.numerator *= b.denominator;\n        a.denominator *= b.numerator;\n    } else if (typeof b === 'number') {\n        a.denominator *= b;\n    } else {\n        return a.divide(new Fraction(b));\n    }\n    return a.normalize();\n}\n\nFraction.prototype.equals = function(b)\n{\n    if (!(b instanceof Fraction)) {\n        b = new Fraction(b);\n    }\n    // fractions that are equal should have equal normalized forms\n    var a = this.clone().normalize();\n    var b = b.clone().normalize();\n    return (a.numerator === b.numerator && a.denominator === b.denominator);\n}\n\n\n/* Utility functions */\n\n/* Destructively normalize the fraction to its smallest representation. \n * e.g. 4/16 -> 1/4, 14/28 -> 1/2, etc.\n * This is called after all math ops.\n */\nFraction.prototype.normalize = (function()\n{\n\n    var isFloat = function(n)\n    {\n        return (typeof(n) === 'number' && \n                ((n > 0 && n % 1 > 0 && n % 1 < 1) || \n                 (n < 0 && n % -1 < 0 && n % -1 > -1))\n               );\n    }\n\n    var roundToPlaces = function(n, places) \n    {\n        if (!places) {\n            return Math.round(n);\n        } else {\n            var scalar = Math.pow(10, places);\n            return Math.round(n*scalar)/scalar;\n        }\n    }\n        \n    return (function() {\n\n        // XXX hackish.  Is there a better way to address this issue?\n        //\n        /* first check if we have decimals, and if we do eliminate them\n         * multiply by the 10 ^ number of decimal places in the number\n         * round the number to nine decimal places\n         * to avoid js floating point funnies\n         */\n        if (isFloat(this.denominator)) {\n            var rounded = roundToPlaces(this.denominator, 9);\n            var scaleup = Math.pow(10, rounded.toString().split('.')[1].length);\n            this.denominator = Math.round(this.denominator * scaleup); // this !!! should be a whole number\n            //this.numerator *= scaleup;\n            this.numerator *= scaleup;\n        } \n        if (isFloat(this.numerator)) {\n            var rounded = roundToPlaces(this.numerator, 9);\n            var scaleup = Math.pow(10, rounded.toString().split('.')[1].length);\n            this.numerator = Math.round(this.numerator * scaleup); // this !!! should be a whole number\n            //this.numerator *= scaleup;\n            this.denominator *= scaleup;\n        }\n        var gcf = Fraction.gcf(this.numerator, this.denominator);\n        this.numerator /= gcf;\n        this.denominator /= gcf;\n        if ((this.numerator < 0 && this.denominator < 0) || (this.numerator > 0 && this.denominator < 0)) {\n            this.numerator *= -1;\n            this.denominator *= -1;\n        }\n        return this;\n    });\n\n})();\n\n\n/* Takes two numbers and returns their greatest common factor.\n */\nFraction.gcf = function(a, b)\n{\n\n    var common_factors = [];\n    var fa = Fraction.primeFactors(a);\n    var fb = Fraction.primeFactors(b);\n    // for each factor in fa\n    // if it's also in fb\n    // put it into the common factors\n    fa.forEach(function (factor) \n    { \n        var i = fb.indexOf(factor);\n        if (i >= 0) {\n            common_factors.push(factor);\n            fb.splice(i,1); // remove from fb\n        }\n    });\n\n    if (common_factors.length === 0)\n        return 1;\n\n    var gcf = (function() {\n        var r = common_factors[0];\n        var i;\n        for (i=1;i<common_factors.length;i++)\n        {\n            r = r * common_factors[i];\n        }\n        return r;\n    })();\n\n    return gcf;\n\n};\n\n\n// Adapted from: \n// http://www.btinternet.com/~se16/js/factor.htm\nFraction.primeFactors = function(n) \n{\n\n    var num = Math.abs(n);\n    var factors = [];\n    var _factor = 2;  // first potential prime factor\n\n    while (_factor * _factor <= num)  // should we keep looking for factors?\n    {      \n      if (num % _factor === 0)  // this is a factor\n        { \n            factors.push(_factor);  // so keep it\n            num = num/_factor;  // and divide our search point by it\n        }\n        else\n        {\n            _factor++;  // and increment\n        }\n    }\n\n    if (num != 1)                    // If there is anything left at the end...\n    {                                // ...this must be the last prime factor\n        factors.push(num);           //    so it too should be recorded\n    }\n\n    return factors;                  // Return the prime factors\n}\n\nmodule.exports.Fraction = Fraction\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"eyyUD\")).toString();","import icons from \"url:../../img/icons.svg\";\r\n\r\n/* \r\n    exporting class directly because we don't want to create any instance from this class we just want to use it as a\r\n    parent class.\r\n*/\r\nexport default class View {\r\n    _data;\r\n\r\n    render(data) { // getting the recipe data here passed from controller\r\n        // console.log(Object.keys(data).length);\r\n        console.log(data);\r\n        if (!data || (Array.isArray(data) && data.length === 0)) return this.renderError();\r\n        this._data = data; // setting data so that we can use it in the html\r\n        const markup = this._generateMarkup(); // markup generator.\r\n        this._clear(); // for clearing the data in the parent element before showing up anything else.\r\n        this._parentElement.insertAdjacentHTML('afterbegin', markup); // showing the data in the parent element.\r\n    }\r\n\r\n    _clear() {\r\n        this._parentElement.innerHTML = '';  // clearing the data from the parent element.\r\n    }\r\n\r\n    addHandlerRender(handler) {\r\n        ['hashchange', 'load'].forEach(ev => window.addEventListener(ev, handler));\r\n    }\r\n\r\n    renderSpinner() {\r\n        const markup = `  \r\n            <div class=\"spinner\">\r\n                <svg>\r\n                    <use href=\"${icons}#icon-loader\"></use>\r\n                </svg>\r\n            </div>\r\n        `;\r\n        this._parentElement.innerHTML = '';\r\n        this._parentElement.insertAdjacentHTML('afterbegin', markup);\r\n    }\r\n\r\n    renderError(message = this._errorMessage) {\r\n        const markup = `\r\n            <div class=\"error\">\r\n                <div>\r\n                    <svg>\r\n                        <use href=\"${icons}#icon-alert-triangle\"></use>\r\n                    </svg>\r\n                </div>\r\n                <p>${message}</p>\r\n            </div>`;\r\n        this._clear();\r\n        this._parentElement.insertAdjacentHTML('afterbegin', markup);\r\n    }\r\n\r\n\r\n    // From search\r\n    getQuery() {\r\n        const qurey = this._parentElement.querySelector('.search__field').value;\r\n        this._parentElement.querySelector('.search__field').value = '';\r\n        return qurey;\r\n    }\r\n\r\n    addHandlerSearch(handler) {\r\n        this._parentElement.addEventListener('submit', function (e) {\r\n            e.preventDefault();\r\n            handler();\r\n        });\r\n    }\r\n}","import View from \"./view\";\r\n// getting the icon from dist folder that's why used 'url:'\r\nimport icons from \"url:../../img/icons.svg\";\r\nimport {Fraction} from \"fractional\";\r\n/*\r\n    # means private data.\r\n*/\r\n\r\n\r\nclass RecipeView extends View {\r\n    _parentElement = document.querySelector('.recipe');\r\n    _errorMessage = 'We couldn\\'t find that recipe. Please try another one!';\r\n\r\n    addHandlerUpdateServings(handler){\r\n        this._parentElement.addEventListener('click', function(e){\r\n            const btn = e.target.closest('.btn--update-servings');\r\n            if(!btn) return;\r\n            console.log(btn);       \r\n            const updateTo = btn.dataset.updateTo;\r\n            if(+updateTo < 1) return;\r\n            handler(+updateTo);     \r\n        })\r\n    }\r\n\r\n    _generateMarkup() { // function for generating markup.\r\n        return `\r\n            <figure class=\"recipe__fig\">\r\n                <img src=\"${this._data.image}\" alt=\"${this._data.title}\" class=\"recipe__img\" />\r\n                <h1 class=\"recipe__title\">\r\n                    <span>${this._data.title}</span>\r\n                </h1>\r\n            </figure>\r\n\r\n            <div class=\"recipe__details\">\r\n                <div class=\"recipe__info\">\r\n                    <svg class=\"recipe__info-icon\">\r\n                       <use href=\"${icons}#icon-clock\"></use>\r\n                    </svg>\r\n                    <span class=\"recipe__info-data recipe__info-data--minutes\">${this._data.time}</span>\r\n                    <span class=\"recipe__info-text\">minutes</span>\r\n                </div>\r\n\r\n                <div class=\"recipe__info\">\r\n                    <svg class=\"recipe__info-icon\">\r\n                    </svg>\r\n                    <span class=\"recipe__info-data recipe__info-data--people\">${this._data.servings}</span>\r\n                    <span class=\"recipe__info-text\">servings</span>\r\n\r\n                <div class=\"recipe__info-buttons\">\r\n   \r\n\r\n                    <button class=\"btn--tiny btn--update-servings\" data-update-to=\"${this._data.servings - 1}\">\r\n                        <svg>\r\n                            <use href=\"${icons}#icon-minus-circle\"></use>\r\n                        </svg>\r\n                    </button>\r\n                    <button class=\"btn--tiny btn--update-servings\" data-update-to=\"${this._data.servings + 1}\">\r\n                        <svg>\r\n                            <use href=\"${icons}#icon-plus-circle\"></use>\r\n                        </svg>\r\n                    </button>\r\n                    </div>\r\n                </div>\r\n\r\n            <div class=\"recipe__user-generated\">\r\n                <svg>\r\n                    <use href=\"${icons}#icon-user\"></use>\r\n                </svg>\r\n            </div>\r\n            <button class=\"btn--round\">\r\n                <svg class=\"\">\r\n                    <use href=\"${icons}#icon-bookmark-fill\"></use>\r\n                </svg>\r\n            </button>\r\n        </div>\r\n\r\n        <div class=\"recipe__ingredients\">\r\n            <h2 class=\"heading--2\">Recipe ingredients</h2>\r\n            <ul class=\"recipe__ingredient-list\">\r\n            ${this._data.ingredients.map(ing => {\r\n            return `\r\n          <li class=\"recipe__ingredient\">\r\n            <svg class=\"recipe__icon\">\r\n              <use href=\"s${icons}#icon-check\"></use>\r\n            </svg>\r\n            <div class=\"recipe__quantity\">${ing.quantity ? new Fraction(ing.quantity).toString() : ''}</div>\r\n            <div class=\"recipe__description\">\r\n              <span class=\"recipe__unit\">${ing.unit}</span>\r\n              ${ing.description}\r\n            </div>\r\n          </li>\r\n        `;\r\n        }).join('')}\r\n    </ul>\r\n  </div>\r\n\r\n  <div class=\"recipe__directions\">\r\n    <h2 class=\"heading--2\">How to cook it</h2>\r\n    <p class=\"recipe__directions-text\">\r\n      This recipe was carefully designed and tested by\r\n      <span class=\"recipe__publisher\">${this._data.publisher}</span>. Please check out\r\n      directions at their website.\r\n    </p>\r\n    <a\r\n      class=\"btn--small recipe__btn\"\r\n      href=\"${this._data.sourceUrl}\"\r\n      target=\"_blank\"\r\n    >\r\n      <span>Directions</span>\r\n      <svg class=\"search__icon\">\r\n        <use href=\"${icons}#icon-arrow-right\"></use>\r\n      </svg>\r\n    </a>\r\n  </div>\r\n  `;\r\n        // recipeContainer.insertAdjacentHTML('afterbegin', markup);\r\n    }\r\n}\r\n\r\n\r\n\r\n/*\r\n->  This is a method like we did not exported the whole class because then for each view we've to create a new class\r\n    and we would end up with having so many classes. \r\n\r\n->  so export default new recipeView(); this is same like we created this object and exported the object instead of the\r\n    whole class.\r\n\r\n\r\n*/\r\n\r\nexport default new RecipeView();","import View from \"./view\";\r\nimport icons from \"url:../../img/icons.svg\";\r\n\r\nclass SearchView extends View{\r\n    _parentElement = document.querySelector('.search');\r\n\r\n\r\n    \r\n}\r\n\r\nexport default new SearchView();\r\n\r\n\r\n/*\r\n    <li class=\"preview\">\r\n        <a class=\"preview__link preview__link--active\" href=\"#23456\">\r\n            <figure class=\"preview__fig\">\r\n                <img src=\"./src/img/test-1.jpg\" alt=\"Test\" />\r\n            </figure>\r\n            <div class=\"preview__data\">\r\n                <h4 class=\"preview__title\">Pasta with Tomato Cream ...</h4>\r\n                <p class=\"preview__publisher\">The Pioneer Woman</p>\r\n                <div class=\"preview__user-generated\">\r\n                  <svg>\r\n                    <use href=\"src/img/icons.svg#icon-user\"></use>\r\n                  </svg>\r\n                </div>\r\n            </div>\r\n        </a>\r\n    </li>\r\n\r\n*/","import icons from \"url:../../img/icons.svg\";\r\nimport View from \"./view\";\r\n\r\nclass resultsView extends View {\r\n    _parentElement = document.querySelector('.results');\r\n    _errorMessage = 'No recipes found for your query! Please try again ;)';\r\n    _generateMarkup() {\r\n        return this._data.map(this._generateMarkupPreview).join('');\r\n    }\r\n\r\n    _generateMarkupPreview(recipe) {\r\n        return `\r\n            <li class=\"preview\">\r\n                <a class=\"preview__link preview__link--active\" href=#${recipe.id}>\r\n                    <figure class=\"preview__fig\">\r\n                        <img src=${recipe.image} alt=\"Test\" />\r\n                    </figure>\r\n                    <div class=\"preview__data\">\r\n                        <h4 class=\"preview__title\">${recipe.title}</h4>\r\n                        <p class=\"preview__publisher\">The Pioneer Woman</p>\r\n                        <div class=\"preview__user-generated\">\r\n                            <svg>\r\n                                <use href=\"${icons}#icon-user\"></use>\r\n                            </svg>\r\n                        </div>\r\n                    </div>\r\n                </a>\r\n            </li>`\r\n            ;\r\n    }\r\n}\r\n\r\nexport default new resultsView();","import View from './view.js';\r\nimport icons from \"url:../../img/icons.svg\";\r\n\r\nclass paginationView extends View{\r\n    _parentElement = document.querySelector('.pagination');\r\n\r\n    addHandlerClick(handler){\r\n        this._parentElement.addEventListener('click', function(e){\r\n            const btn = e.target.closest('.btn--inline');\r\n            if(!btn) return;\r\n            const gotoPage = +btn.dataset.goto;\r\n            handler(gotoPage);\r\n        })\r\n    }\r\n\r\n    _generateMarkup(){\r\n        const currPage = this._data.page\r\n        const numPages = Math.ceil(this._data.results.length / this._data.resultsPerPage);\r\n        // console.log(this._data.results.length, this._data.resultsPerPage);\r\n        console.log(this._data.results.length , this._data.resultsPerPage, numPages);\r\n\r\n        // first page and showing only next button.\r\n        if(currPage === 1 && numPages > 1){\r\n            return `\r\n                <button data-goto=\"${currPage+1}\" class=\"btn--inline pagination__btn--next\">\r\n                    <span>Page ${currPage+1}</span>\r\n                    <svg class=\"search__icon\">\r\n                        <use href=\"${icons}#icon-arrow-right\"></use>\r\n                    </svg>\r\n                </button>\r\n            `;\r\n        }\r\n        \r\n        // last page and only showing the previous button\r\n        if(currPage === numPages && numPages > 1){\r\n            console.log(currPage)\r\n            return `\r\n                <button data-goto=\"${currPage-1}\" class=\"btn--inline pagination__btn--prev\">\r\n                     <svg class=\"search__icon\">\r\n                         <use href=\"${icons}#icon-arrow-left\"></use>\r\n                     </svg>\r\n                     <span>Page ${currPage-1}</span>\r\n                </button>\r\n            `;\r\n        }\r\n\r\n        // between somewhere last and first showing both the buttons\r\n        if(currPage < numPages){\r\n            return `\r\n                <button data-goto=\"${currPage-1}\" class=\"btn--inline pagination__btn--prev\">\r\n                    <svg class=\"search__icon\">\r\n                        <use href=\"${icons}#icon-arrow-left\"></use>\r\n                    </svg>\r\n                    <span>Page ${currPage-1}</span>\r\n                </button>\r\n                <button data-goto=\"${currPage+1}\" class=\"btn--inline pagination__btn--next\">\r\n                    <span>Page ${currPage+1}</span>\r\n                    <svg class=\"search__icon\">\r\n                        <use href=\"${icons}#icon-arrow-right\"></use>\r\n                    </svg>\r\n                </button>\r\n            `;\r\n        }\r\n\r\n        // only one page don't have to show anything\r\n        return '';\r\n    }\r\n}\r\n\r\n// const markup = `\r\n//     <button class=\"btn--inline pagination__btn--prev\">\r\n//         <svg class=\"search__icon\">\r\n//             <use href=\"src/img/icons.svg#icon-arrow-left\"></use>\r\n//         </svg>\r\n//         <span>Page 1</span>\r\n//     </button>\r\n//     <button class=\"btn--inline pagination__btn--next\">\r\n//         <span>Page 3</span>\r\n//         <svg class=\"search__icon\">\r\n//             <use href=\"src/img/icons.svg#icon-arrow-right\"></use>\r\n//         </svg>\r\n//     </button>\r\n// `;\r\n\r\n// this._parentElement.insertAdjacentHTML('afterend', markup);\r\nexport default new paginationView();","import * as model from './model.js';\r\nimport RecipeView from './Views/recipeView.js';\r\nimport searchView from './Views/searchView.js';\r\nimport resultsView from './Views/resultsView.js';\r\nimport paginationView from './Views/paginationView.js'; \r\n\r\n// if(module.hot){\r\n//   module.hot.accept();\r\n// }\r\n\r\nconst timeout = function (s) {\r\n  return new Promise(function (_, reject) {\r\n    setTimeout(function () {\r\n      reject(new Error(`Request took too long! Timeout after ${s} second`));\r\n    }, s * 1000);\r\n  });\r\n};\r\n\r\nconst controlRecipes = async function () {\r\n  try {\r\n    const id = window.location.hash.slice(1);\r\n    if(!id) return;\r\n    RecipeView.renderSpinner();\r\n    \r\n    // 1. Loading recipe\r\n    await model.loadRecipe(id);\r\n    // 2. Rendering recipe\r\n    RecipeView.render(model.state.recipe); // imported the object exported from view and here passing the data in the render method.\r\n\r\n  } catch (error) {\r\n    RecipeView.renderError();\r\n  }\r\n}\r\n\r\n// if (module.hot) {\r\n//   module.hot.accept();\r\n// }\r\n\r\n// search result\r\n\r\nconst controlSearchResults = async function() {\r\n  try {\r\n    resultsView.renderSpinner();\r\n\r\n    const query = searchView.getQuery();\r\n    if(!query) return;\r\n    await model.searchRecipe(query);\r\n    // searchView.renderSpinner();\r\n    resultsView.render(model.getSearchResultsPage(1));\r\n\r\n    paginationView.render(model.state.search);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nconst controlPagination = function (gotoPage) {\r\n  \r\n  // Get new pages\r\n  resultsView.render(model.getSearchResultsPage(gotoPage));\r\n  // show new pages\r\n  paginationView.render(model.state.search);\r\n}\r\n\r\nconst controlServings = function (newServings) {\r\n  // update the recipe servings (in state)\r\n  model.updateServings(newServings);\r\n  // update the recipe view\r\n  RecipeView.render(model.state.recipe);\r\n}\r\n\r\n\r\n\r\n// calling same function on every event insted of repeating.\r\nconst init = function() {\r\n  RecipeView.addHandlerRender(controlRecipes);\r\n  RecipeView.addHandlerUpdateServings(controlServings);\r\n  searchView.addHandlerSearch(controlSearchResults);\r\n  paginationView.addHandlerClick(controlPagination);\r\n}\r\ninit();\r\n\r\n"],"names":["$18c11f3350a906ea$export$6503ec6e8aabbaf","$18c11f3350a906ea$export$f7ad0328861e2f03","$18c11f3350a906ea$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$ba30e20475feac5a$export$923ea8233b386e99","$d3824bf2ef2465db$export$d047a7c56db64af4","async","url","res","fetch","data","json","ok","message","status","error","console","log","$0f1d4402dffacf5b$export$ca000e230c0caa3e","recipe","search","query","results","page","resultsPerPage","$0f1d4402dffacf5b$export$8d7f79465139ab72","start","end","slice","$d6b4c6d58e0c0c19$export$b336c2702c498be5","isFloat","roundToPlaces","$d981731ada74638f$exports","URL","resolve","toString","$4696ae9d17e752fb$export$2e2bcd8739ae039","_data","render","Array","isArray","this","renderError","markup","_generateMarkup","_clear","_parentElement","insertAdjacentHTML","innerHTML","addHandlerRender","handler","forEach","ev","window","addEventListener","renderSpinner","$parcel$interopDefault","_errorMessage","getQuery","qurey","querySelector","value","addHandlerSearch","e","preventDefault","Fraction","numerator","denominator","parseInt","num","a","b","arr","split","match","add","f","parseFloat","normalize","prototype","clone","wholepart","Math","floor","ceil","result","push","abs","join","rescale","factor","td","subtract","multiply","divide","equals","n","places","scalar","pow","round","rounded","scaleup","gcf","common_factors","fa","primeFactors","fb","indexOf","splice","r","num1","factors","_factor","$e1e4a24656419083$export$2e2bcd8739ae039","document","addHandlerUpdateServings","btn","target","closest","updateTo","dataset","image","title","time","servings","ingredients","map","ing","quantity","unit","description","publisher","sourceUrl","$71ed8ab7e07c4894$export$2e2bcd8739ae039","$b1fbb683905de2e5$export$2e2bcd8739ae039","_generateMarkupPreview","$f28fca56142c2521$export$2e2bcd8739ae039","addHandlerClick","gotoPage","goto","currPage","numPages","$f50bd1f2915ed0f2$var$controlRecipes","location","hash","recipe_id","image_url","cooking_time","source_url","$0f1d4402dffacf5b$export$b96725c7a035d60b","$f50bd1f2915ed0f2$var$controlSearchResults","findRecipe","recipes","rec","$0f1d4402dffacf5b$export$62f4e5451c33ad38","$f50bd1f2915ed0f2$var$controlPagination","$f50bd1f2915ed0f2$var$controlServings","newServings","$0f1d4402dffacf5b$export$5e23f4642ecad5ea"],"version":3,"file":"index.f29ed766.js.map"}